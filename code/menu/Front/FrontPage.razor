@using System
@using Sandbox;
@using Sandbox.MenuSystem;
@using Sandbox.UI;
@inherits Panel
@namespace Facepunch.Hover
@attribute [StyleSheet]

<root style="flex-direction: column;">

    <div class="game-title">
        @Game.Menu.Package.Title
    </div>

    <div class="controls">

        @if ( Game.InGame )
        {
            <a class="button" onclick=@LeaveGame>Leave Game</a>
            <span style="height: 20px;"></span>
        }
        else
        {
	        <a class="button" onclick="@CreateNewGame">Create Game</a>
	        <a class="button" onclick="@OpenServerList">Find a Game</a>
	        <a class="button" href="/settings">Settings</a>
        }

        <span style="height: 20px;"></span>

        @if ( !Game.InGame )
        {
	        <a class="button" @onclick=@Game.Menu.Close>Quit</a>
        }

    </div>

</root>

@code
{
	private void LeaveGame()
    {
        Game.Menu.LeaveServer("Leaving");
    }

	private void CreateNewGame()
    {
        var options = new Sandbox.Modals.GameCreateModalOptions
        {
	        Cookie = $"{Game.Menu.Package.FullIdent}.serverconfig",
	        ModalTitle = "Create Game",
	        MapFilter = "type:map sort:trending game:facepunch.hover"
        };
	    
	    options.Default.Map = "facepunch.hv_dune";
        options.Default.GameTitle = $"Hover";

        options.OnStartGame = ( setup ) =>
        {
            Game.Menu.StartServerAsync( setup.MaxPlayers, setup.GameTitle, setup.Map );
        };

        Game.Overlay.ShowCreateGame( options );
    }

    private void OpenServerList()
    {
        var options = new Sandbox.Modals.ServerListModalOptions
        {
	        TargetGame = Game.Menu.Package.FullIdent,
	        OnSelected = ( server ) =>
	        {
		        Game.Menu.ConnectToServer( server.SteamId );
	        }
        };

	    Game.Overlay.ShowServerList( options );
    }
}
