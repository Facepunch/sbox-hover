@using System;
@using Sandbox;
@using Sandbox.UI;
@using Facepunch.Hover;

@namespace Facepunch.Hover.UI
@attribute [StyleSheet( "/ui/WeaponListItem.scss" )]
@inherits Panel

@if ( !Weapon.IsValid() ) return;

<root class="weapon">
    <div class="icon-container">
        <img src=@Weapon.Config.Icon class="icon" />
    </div>

    <div class="weapon-name">
        <text class="Name">@Weapon.Config.Name</text>
    </div>

    <div class="weapon-number @(string.IsNullOrEmpty( KeyBind ) ? "hidden": "")">
        @{
            var slotText = "";

            if ( !string.IsNullOrEmpty( KeyBind ) )
                slotText = Input.GetButtonOrigin( KeyBind ).ToUpper();
        }

        <text>@slotText</text>
    </div>
</root>

@code
{
    public bool IsUsingAbility { get; set; }
    public bool IsAvailable { get; set; }
    public bool IsPassive { get; set; }
    public bool IsAbility { get; set; }
    public bool IsActive { get; set; }
    public bool IsHidden { get; set; }
    public string KeyBind { get; set; }
    public Weapon Weapon { get; set; }

    public override void Tick()
    {
        SetClass( "using_ability", IsUsingAbility );
        SetClass( "unavailable", !IsAvailable );
        SetClass( "ability", IsAbility );
        SetClass( "passive", IsPassive );
        SetClass( "hidden", IsHidden );
        SetClass( "active", IsActive );

        base.Tick();
    }

    protected override int BuildHash()
    {
        return HashCode.Combine( Weapon );
    }
}
