@using System;
@using Sandbox;
@using Sandbox.UI;
@using Facepunch.Hover;

@namespace Facepunch.Hover.UI
@attribute [StyleSheet( "/ui/WorldGeneratorHud.scss" )]
@inherits WorldPanel

<root>
    <div class="container">
        <BindingLabel @ref="BindingLabel" action="Use" hold>Repair</BindingLabel>
        <label @ref="EngineerLabel" class="engineer">(Engineer Required)</label>
        <label @ref="RegenLabel" class="regen"></label>
    </div>
</root>

@code
{
	public GeneratorAsset Entity { get; private set; }
	public string Attachment { get; set; }
	public Label RegenLabel { get; set; }
	public Label EngineerLabel { get; set; }
	public BindingLabel BindingLabel { get; set; }

	public void SetEntity( GeneratorAsset entity, string attachment )
	{
		Entity = entity;
		Attachment = attachment;
		AddClass( entity.Team.GetHudClass() );
	}

	public override void Tick()
	{
		if ( Game.LocalPawn is not HoverPlayer player )
			return;

		if ( IsDeleting ) return;

		if ( !Entity.IsValid() )
		{
			Delete();
			return;
		}

		if ( !Entity.CanPlayerRepair( player ) )
		{
			SetClass( "hidden", true );
			return;
		}

		var attachment = Entity.GetAttachment( Attachment );

		if ( attachment.HasValue )
		{
			Transform = attachment.Value.WithScale( 1f );
		}

		EngineerLabel.SetClass( "hidden", player.Loadout.CanRepairGenerator );
		BindingLabel.SetClass( "hidden", !player.Loadout.CanRepairGenerator );

		if ( Entity.StartRegenTime )
		{
			RegenLabel.SetClass( "hidden", true );
		}
		else
		{
			RegenLabel.SetClass( "hidden", false );
			RegenLabel.Text = $"Automatic Repair: {Entity.StartRegenTime.Relative.CeilToInt()}s";
		}

		var transform = Transform;
		transform.Rotation = Rotation.LookAt( Camera.Position - Position );
		Transform = transform;

		SetClass( "hidden", false );

		base.Tick();
	}
}
