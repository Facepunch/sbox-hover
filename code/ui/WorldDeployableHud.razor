@using System;
@using Sandbox;
@using Sandbox.UI;
@using Facepunch.Hover;

@namespace Facepunch.Hover.UI
@attribute [StyleSheet( "/ui/WorldDeployableHud.scss" )]
@inherits WorldPanel

<root>
    <div class="container">
        <BindingLabel action="Use" hold>Pickup</BindingLabel>
        <SimpleIconBar @ref="IconBar" class="bar"></SimpleIconBar>
    </div>
</root>

@code
{
    public DeployableEntity Entity { get; private set; }
    public SimpleIconBar IconBar { get; private set; }
    public new float WorldScale { get; set; } = 1f;
    public Panel Container { get; set; }

    public void SetEntity( DeployableEntity entity )
    {
        Entity = entity;

        AddClass( entity.Team.GetHudClass() );
    }

    public void SetProgress( float progress )
    {
        var length = Length.Fraction( progress );

        if ( IconBar.InnerBar.Style.Width != length )
        {
            IconBar.InnerBar.Style.Width = length;
            IconBar.InnerBar.Style.Dirty();
            IconBar.InnerBar.SetClass( "hidden", progress < 0.05f );
        }

        IconBar.SetClass( "hidden", progress == 0f );
    }

    public override void Tick()
    {
        if ( Game.LocalPawn is not HoverPlayer player )
            return;

        if ( IsDeleting ) return;

        if ( !Entity.IsValid() )
        {
            Delete();
            return;
        }

        if ( !Entity.IsUsable( player ) )
        {
            SetClass( "hidden", true );
            return;
        }

        var distance = player.Position.Distance( Entity.Position );
        Style.Opacity = UIUtil.GetMinMaxDistanceAlpha( distance, 100f, 500f );

        var cameraPosition = Camera.Position;
        var transform = Transform;
        var position = Entity.WorldSpaceBounds.Center;
        var direction = (cameraPosition - position).Normal;

        transform.Position = position + direction * 16f;

		var targetRotation = Rotation.LookAt( cameraPosition - Position );
		transform.Rotation = Rotation.Lerp( transform.Rotation, targetRotation, 0.4f );

		Transform = transform;

		SetProgress( Entity.PickupProgress );
		SetClass( "hidden", false );

		base.Tick();
	}
}
