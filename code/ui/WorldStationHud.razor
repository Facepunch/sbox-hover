@using System;
@using Sandbox;
@using Sandbox.UI;
@using Facepunch.Hover;

@namespace Facepunch.Hover.UI
@attribute [StyleSheet( "/ui/WorldStationHud.scss" )]
@inherits WorldPanel

<root>
    <BindingLabel action="Use">Open Station</BindingLabel>
    <SimpleIconBar @ref="IconBar" class="restock"></SimpleIconBar>
</root>

@code
{
	public StationAsset Entity { get; private set; }
	public string Attachment { get; set; }

	private SimpleIconBar IconBar { get; set; }

	public void SetEntity( StationAsset entity, string attachment )
	{
		Entity = entity;
		Attachment = attachment;
	}

	public void SetRestockTime( float value )
	{
		var fraction = Length.Fraction( 1f - ( value / 30f ) );

		if ( IconBar.InnerBar.Style.Width != fraction )
		{
			IconBar.InnerBar.Style.Width = fraction;
		}
	}

	public override void Tick()
	{
		if ( Game.LocalPawn is not HoverPlayer player )
			return;

		if ( IsDeleting ) return;

		if ( !Entity.IsValid() )
		{
			Delete();
			return;
		}

		if ( !Entity.CanPlayerUse( player ) )
		{
			SetClass( "hidden", true );
			return;
		}

		SetClass( Team.Red.GetHudClass(), Entity.Team == Team.Red );
		SetClass( Team.Blue.GetHudClass(), Entity.Team == Team.Blue );
		SetClass( Team.None.GetHudClass(), Entity.Team == Team.None );

		var attachment = Entity.GetAttachment( Attachment );

		if ( attachment.HasValue )
		{
			Transform = attachment.Value.WithScale( 1f );
		}

		var targetRotation = Rotation.LookAt( Camera.Position - Position );
		var transform = Transform;

		transform.Rotation = Rotation.Lerp( transform.Rotation, targetRotation, 0.4f );

		Transform = transform;

		SetRestockTime( player.NextStationRestock );
		SetClass( "hidden", false );

		base.Tick();
	}
}
